[{"/Users/nathankim/dev/tutorial/movie-app/client/src/index.js":"1","/Users/nathankim/dev/tutorial/movie-app/client/src/serviceWorker.js":"2","/Users/nathankim/dev/tutorial/movie-app/client/src/components/App.js":"3","/Users/nathankim/dev/tutorial/movie-app/client/src/_reducers/index.js":"4","/Users/nathankim/dev/tutorial/movie-app/client/src/components/views/LandingPage/LandingPage.js":"5","/Users/nathankim/dev/tutorial/movie-app/client/src/components/views/LoginPage/LoginPage.js":"6","/Users/nathankim/dev/tutorial/movie-app/client/src/components/views/RegisterPage/RegisterPage.js":"7","/Users/nathankim/dev/tutorial/movie-app/client/src/hoc/auth.js":"8","/Users/nathankim/dev/tutorial/movie-app/client/src/components/views/NavBar/NavBar.js":"9","/Users/nathankim/dev/tutorial/movie-app/client/src/components/views/Footer/Footer.js":"10","/Users/nathankim/dev/tutorial/movie-app/client/src/_reducers/user_reducer.js":"11","/Users/nathankim/dev/tutorial/movie-app/client/src/_actions/user_actions.js":"12","/Users/nathankim/dev/tutorial/movie-app/client/src/components/views/NavBar/Sections/LeftMenu.js":"13","/Users/nathankim/dev/tutorial/movie-app/client/src/components/views/NavBar/Sections/RightMenu.js":"14","/Users/nathankim/dev/tutorial/movie-app/client/src/components/Config.js":"15","/Users/nathankim/dev/tutorial/movie-app/client/src/_actions/types.js":"16","/Users/nathankim/dev/tutorial/movie-app/client/src/components/views/commons/GridCards.js":"17","/Users/nathankim/dev/tutorial/movie-app/client/src/components/views/MovieDetail/MovieDetail.js":"18","/Users/nathankim/dev/tutorial/movie-app/client/src/components/views/commons/MainImage.js":"19","/Users/nathankim/dev/tutorial/movie-app/client/src/components/views/MovieDetail/Sections/MovieInfo.js":"20","/Users/nathankim/dev/tutorial/movie-app/client/src/components/views/MovieDetail/Sections/Favorite.js":"21","/Users/nathankim/dev/tutorial/movie-app/client/src/components/views/FavoritePage/FavoritePage.js":"22"},{"size":1187,"mtime":1607875417489,"results":"23","hashOfConfig":"24"},{"size":4951,"mtime":1607875417489,"results":"25","hashOfConfig":"24"},{"size":1328,"mtime":1607917360243,"results":"26","hashOfConfig":"24"},{"size":157,"mtime":1607875417486,"results":"27","hashOfConfig":"24"},{"size":2560,"mtime":1607896720981,"results":"28","hashOfConfig":"24"},{"size":5132,"mtime":1607876863948,"results":"29","hashOfConfig":"24"},{"size":6254,"mtime":1607875417488,"results":"30","hashOfConfig":"24"},{"size":1455,"mtime":1607875417488,"results":"31","hashOfConfig":"24"},{"size":1353,"mtime":1607876869746,"results":"32","hashOfConfig":"24"},{"size":401,"mtime":1607876881813,"results":"33","hashOfConfig":"24"},{"size":533,"mtime":1607875417486,"results":"34","hashOfConfig":"24"},{"size":1034,"mtime":1607875417486,"results":"35","hashOfConfig":"24"},{"size":798,"mtime":1607917414791,"results":"36","hashOfConfig":"24"},{"size":1095,"mtime":1607875417488,"results":"37","hashOfConfig":"24"},{"size":233,"mtime":1607877546726,"results":"38","hashOfConfig":"24"},{"size":166,"mtime":1607875417486,"results":"39","hashOfConfig":"24"},{"size":857,"mtime":1607896949301,"results":"40","hashOfConfig":"24"},{"size":2910,"mtime":1607914239796,"results":"41","hashOfConfig":"24"},{"size":829,"mtime":1607895180922,"results":"42","hashOfConfig":"24"},{"size":985,"mtime":1607895916893,"results":"43","hashOfConfig":"24"},{"size":2565,"mtime":1607919485550,"results":"44","hashOfConfig":"24"},{"size":2436,"mtime":1607920837556,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1l97yzb",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/nathankim/dev/tutorial/movie-app/client/src/index.js",[],["98","99"],"/Users/nathankim/dev/tutorial/movie-app/client/src/serviceWorker.js",[],"/Users/nathankim/dev/tutorial/movie-app/client/src/components/App.js",[],"/Users/nathankim/dev/tutorial/movie-app/client/src/_reducers/index.js",[],"/Users/nathankim/dev/tutorial/movie-app/client/src/components/views/LandingPage/LandingPage.js",["100","101"],"import React, { useEffect, useState } from 'react'\nimport { FaCode } from \"react-icons/fa\";\nimport { API_URL, API_KEY, IMAGE_BASE_URL } from '../../Config'\nimport MainImage from '../commons/MainImage'\nimport GridCards from '../commons/GridCards'\nimport { Row } from 'antd';\n\nfunction LandingPage() {\n\n    const [Movies, setMovies] = useState([]);\n    const [MainMovieImage, setMainMovieImage] = useState(null);\n    const [CurrentPage, setCurrentPage] = useState(0);\n\n    useEffect(() => {\n        const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1` \n        fetchMovies(endpoint)\n    }, [])\n\n    const fetchMovies = (endpoint) => {\n        fetch(endpoint)\n            .then(response => response.json())\n            .then(response => {\n                console.log(response)\n                setMovies([ ...Movies, ...response.results])\n                setMainMovieImage(response.results[0])\n                setCurrentPage(response.page)\n            })\n    }\n\n    const loadMoreItems = () => {\n        console.log('I am here')\n        const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${CurrentPage + 1}` \n        fetchMovies(endpoint)\n    }\n\n    return (\n        <div style={{ width: '100%', margin: '0' }}>\n\n            {/* Main Image */}\n            {MainMovieImage &&\n               <MainImage \n                image={`${IMAGE_BASE_URL}w1280${MainMovieImage.backdrop_path}`}\n                title={MainMovieImage.original_title}\n                text={MainMovieImage.overview}\n               />\n            }\n\n            <div style={{ width: '85%', margin: '1rem auto'}}>\n\n                <h2>Movies by latest</h2>\n                <hr />\n\n                {/* Movie Grid Cards */}\n                <Row gutter={[16, 16]}>\n                    {Movies && Movies.map((movie, index) => (\n                        <React.Fragment key={index}>\n                            <GridCards\n                                landingPage\n                                image={movie.poster_path?`${IMAGE_BASE_URL}w500${movie.poster_path}` : null}\n                                movieId={movie.id}\n                                movieName={movie.original_title}\n                            />\n                        </React.Fragment>\n                    ))}\n\n\n                </Row>\n\n            </div>\n\n            <div style={{ display: 'flex', justifyContent: 'center'}}>\n                <button onClick={loadMoreItems}> Load More</button>\n            </div>\n\n        </div>\n    )\n}\n\nexport default LandingPage\n","/Users/nathankim/dev/tutorial/movie-app/client/src/components/views/LoginPage/LoginPage.js",["102","103"],"import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Input, Button, Checkbox, Typography } from 'antd';\nimport { Icon } from '@ant-design/compatible';\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  forgot password\n                  </a>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n","/Users/nathankim/dev/tutorial/movie-app/client/src/components/views/RegisterPage/RegisterPage.js",["104","105"],"import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n\n    <Formik\n      initialValues={{\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Name is required'),\n        lastName: Yup.string()\n          .required('Last Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg)\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage\n","/Users/nathankim/dev/tutorial/movie-app/client/src/hoc/auth.js",["106"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n            //To know my current status, send Auth request \n            dispatch(auth()).then(response => {\n                //Not Loggined in Status \n                if (!response.payload.isAuth) {\n                    if (option) {\n                        props.history.push('/login')\n                    }\n                    //Loggined in Status \n                } else {\n                    //supposed to be Admin page, but not admin person wants to go inside\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    //Logged in Status, but Try to go into log in page \n                    else {\n                        if (option === false) {\n                            props.history.push('/')\n                        }\n                    }\n                }\n            })\n\n        }, [])\n\n        return (\n            <SpecificComponent {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","/Users/nathankim/dev/tutorial/movie-app/client/src/components/views/NavBar/NavBar.js",[],"/Users/nathankim/dev/tutorial/movie-app/client/src/components/views/Footer/Footer.js",[],"/Users/nathankim/dev/tutorial/movie-app/client/src/_reducers/user_reducer.js",["107"],"import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from '../_actions/types';\n \n\nexport default function(state={},action){\n    switch(action.type){\n        case REGISTER_USER:\n            return {...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return {...state, userData: action.payload }\n        case LOGOUT_USER:\n            return {...state }\n        default:\n            return state;\n    }\n}","/Users/nathankim/dev/tutorial/movie-app/client/src/_actions/user_actions.js",[],"/Users/nathankim/dev/tutorial/movie-app/client/src/components/views/NavBar/Sections/LeftMenu.js",["108","109"],"/Users/nathankim/dev/tutorial/movie-app/client/src/components/views/NavBar/Sections/RightMenu.js",[],"/Users/nathankim/dev/tutorial/movie-app/client/src/components/Config.js",[],"/Users/nathankim/dev/tutorial/movie-app/client/src/_actions/types.js",[],"/Users/nathankim/dev/tutorial/movie-app/client/src/components/views/commons/GridCards.js",[],"/Users/nathankim/dev/tutorial/movie-app/client/src/components/views/MovieDetail/MovieDetail.js",["110","111","112"],"import React, { useEffect, useState } from 'react'\nimport { API_URL, API_KEY, IMAGE_BASE_URL} from '../../Config'\nimport MainImage from '../commons/MainImage'\nimport MovieInfo from './Sections/MovieInfo'\nimport GridCards from '../commons/GridCards'\nimport { Row, Button } from 'antd';\nimport { useStore } from 'react-redux'\nimport Favorite from './Sections/Favorite'\nimport Axios from 'axios'\n\nfunction MovieDetail(props) {\n\n    let movieId = props.match.params.movieId\n    const [Movie, setMovie] = useState([])\n    const [Casts, setCasts] = useState([])\n    const [ActorToggle, setActorToggle] = useState(false)\n\n    useEffect(() => {\n\n        let endpointCrew = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n        let endpointDetail = `${API_URL}movie/${movieId}?api_key=${API_KEY}`\n        \n        fetch(endpointDetail)\n            .then(response => response.json())\n            .then(response => {\n                console.log('response is: ', response)\n                setMovie(response)\n            })\n\n        fetch(endpointCrew)\n        .then(response => response.json())\n        .then(response => {\n            console.log('responseForCrew is: ', response)\n            setCasts(response.cast)\n        })\n\n    }, [])\n\n    const toggleActorView = () => {\n        setActorToggle(!ActorToggle)\n    }\n\n    return (\n        <div>\n            {/* Header */}\n            <MainImage\n                image={`${IMAGE_BASE_URL}w1280${Movie.backdrop_path}`}\n                title={Movie.original_title}\n                text={Movie.overview} \n            />\n\n            {/* Body */}\n            <div style={{ width: '85%', margin: '1rem auto'}}>\n                \n                {/* Movie Info */}\n\n                <div style={{ display: 'flex', justifyContent: 'flex-end'}}>\n                    <Favorite movieInfo={Movie} movieId={movieId} userFrom={localStorage.getItem('userId')} />\n                </div>\n\n                <MovieInfo movie={Movie}/>\n\n                {/* Actors Grid */}\n                <br/>\n                <div style={{ display: 'flex', justifyContent: 'center'}}>\n                    <Button onClick={toggleActorView}> Toggle Actor Grid </Button>\n                </div>\n                <br/>\n\n                {ActorToggle && \n                    <Row gutter={[16, 16]}>\n                        {Casts && Casts.map((cast, index) => (\n                            <React.Fragment key={index}>\n                                <GridCards\n                                    movieDetail\n                                    image={cast.profile_path ? `${IMAGE_BASE_URL}w500${cast.profile_path}` : null}\n                                    castName={cast.name}\n                                />\n                            </React.Fragment>\n                        ))}\n                    </Row>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default MovieDetail\n","/Users/nathankim/dev/tutorial/movie-app/client/src/components/views/commons/MainImage.js",[],"/Users/nathankim/dev/tutorial/movie-app/client/src/components/views/MovieDetail/Sections/MovieInfo.js",["113"],"import React from 'react'\nimport {Descriptions, Badge } from 'antd'\n\nfunction MovieInfo(props) {\n\n    let { movie } = props;\n    return (\n        <Descriptions title=\"Movie Info\" bordered>\n            <Descriptions.Item label=\"Title\">{movie.original_title}</Descriptions.Item>\n            <Descriptions.Item label=\"release_date\">{movie.release_date}</Descriptions.Item>\n            <Descriptions.Item label=\"revenue\">{movie.revenue}</Descriptions.Item>\n            <Descriptions.Item label=\"runtime\">{movie.runtime}</Descriptions.Item>\n            <Descriptions.Item label=\"vote_average\" span={2}>\n                {movie.vote_average}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"vote_count\">{movie.vote_count}</Descriptions.Item>\n            <Descriptions.Item label=\"status\">{movie.status}</Descriptions.Item>\n            <Descriptions.Item label=\"popularity\">{movie.popularity}</Descriptions.Item>\n        </Descriptions>\n    )\n}\n\nexport default MovieInfo\n","/Users/nathankim/dev/tutorial/movie-app/client/src/components/views/MovieDetail/Sections/Favorite.js",["114"],"/Users/nathankim/dev/tutorial/movie-app/client/src/components/views/FavoritePage/FavoritePage.js",["115"],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":16},{"ruleId":"124","severity":1,"message":"125","line":17,"column":8,"nodeType":"126","endLine":17,"endColumn":10,"suggestions":"127"},{"ruleId":"120","severity":1,"message":"128","line":75,"column":11,"nodeType":"122","messageId":"123","endLine":75,"endColumn":16},{"ruleId":"120","severity":1,"message":"129","line":80,"column":11,"nodeType":"122","messageId":"123","endLine":80,"endColumn":22},{"ruleId":"120","severity":1,"message":"128","line":92,"column":11,"nodeType":"122","messageId":"123","endLine":92,"endColumn":16},{"ruleId":"120","severity":1,"message":"129","line":97,"column":11,"nodeType":"122","messageId":"123","endLine":97,"endColumn":22},{"ruleId":"130","severity":1,"message":"131","line":6,"column":1,"nodeType":"132","endLine":42,"endColumn":2},{"ruleId":"130","severity":1,"message":"131","line":9,"column":1,"nodeType":"132","endLine":22,"endColumn":2},{"ruleId":"120","severity":1,"message":"133","line":3,"column":7,"nodeType":"122","messageId":"123","endLine":3,"endColumn":14},{"ruleId":"120","severity":1,"message":"134","line":4,"column":7,"nodeType":"122","messageId":"123","endLine":4,"endColumn":20},{"ruleId":"120","severity":1,"message":"135","line":7,"column":10,"nodeType":"122","messageId":"123","endLine":7,"endColumn":18},{"ruleId":"120","severity":1,"message":"136","line":9,"column":8,"nodeType":"122","messageId":"123","endLine":9,"endColumn":13},{"ruleId":"124","severity":1,"message":"137","line":37,"column":8,"nodeType":"126","endLine":37,"endColumn":10,"suggestions":"138"},{"ruleId":"120","severity":1,"message":"139","line":2,"column":23,"nodeType":"122","messageId":"123","endLine":2,"endColumn":28},{"ruleId":"124","severity":1,"message":"140","line":70,"column":8,"nodeType":"126","endLine":70,"endColumn":10,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":51,"column":21,"nodeType":"144","endLine":51,"endColumn":78},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'FaCode' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMovies'. Either include it or remove the dependency array.","ArrayExpression",["147"],"'dirty' is assigned a value but never used.","'handleReset' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'SubMenu' is assigned a value but never used.","'MenuItemGroup' is assigned a value but never used.","'useStore' is defined but never used.","'Axios' is defined but never used.","React Hook useEffect has a missing dependency: 'movieId'. Either include it or remove the dependency array.",["148"],"'Badge' is defined but never used.","React Hook useEffect has a missing dependency: 'variables'. Either include it or remove the dependency array.",["149"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},"Update the dependencies array to be: [fetchMovies]",{"range":"156","text":"157"},"Update the dependencies array to be: [movieId]",{"range":"158","text":"159"},"Update the dependencies array to be: [variables]",{"range":"160","text":"161"},[619,621],"[fetchMovies]",[1234,1236],"[movieId]",[2342,2344],"[variables]"]